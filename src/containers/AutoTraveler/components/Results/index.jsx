import React from 'react';
import { connect } from 'react-redux';
import * as actionCreators from 'actions/actions';
import { UncontrolledReactSVGPanZoom, POSITION_LEFT, ALIGN_CENTER, TOOL_NONE } from 'react-svg-pan-zoom'
import { ReactSvgPanZoomLoader } from "react-svg-pan-zoom-loader";
import { AutoSizer } from 'react-virtualized';

const miniatureProps = { position: TOOL_NONE }
const toolbarProps = { position: POSITION_LEFT, SVGAlignY: ALIGN_CENTER, SVGAlignX: ALIGN_CENTER }


class Results extends React.Component {
  constructor(props) {
    super(props);
  }

  render() {
    let title = {
      color: this.props.customStyle && this.props.customStyle.titleColor ? this.props.customStyle.titleColor : "#007c82",
      fontSize: this.props.customStyle && this.props.customStyle.titleSize ? this.props.customStyle.titleSize : "28px",
    };
    const fixCss = this.props.customStyle && this.props.customStyle.fixCss && this.props.customStyle.fixCss === "true" ? "1.5rem" : "";
    const linkColor = this.props.customStyle && this.props.customStyle.linkColor ? this.props.customStyle.linkColor : "#337ab7";

    return (
      <div className="rna">
        {
          this.props.jobId && this.props.status === "error" && (
            <div className="row" key={`error-div`}>
              <div className="col-sm-9">
                <div className="alert alert-danger">
                  There was an error. <a href="mailto:rnacentral@gmail.com">Contact us</a> if the problem persists.
                </div>
              </div>
            </div>
          )
        }
        {
          this.props.jobId && this.props.status === "FINISHED" && [
            <div className="row" key={`results-div`}>
              <div className="col-sm-12">
                <br />
                <span style={title}>Secondary structure </span>
                <p className="text-muted mt-3">
                  Generated by <a className="custom-link" style={{color: linkColor}} href="https://github.com/RNAcentral/auto-traveler" target="_blank">auto-traveler</a>. <a className="custom-link" style={{color: linkColor}} href="https://rnacentral.org/help/secondary-structure" target="_blank">Learn more â†’</a>
                </p>
                <p className="mt-3">
                  <a className="btn btn-outline-secondary mr-2" style={{fontSize: fixCss}} href={`https://wwwdev.ebi.ac.uk/Tools/services/rest/auto_traveler/result/${this.props.jobId}/autotraveler`}>
                    Download files
                  </a>
                  <button className="btn btn-outline-secondary" style={{fontSize: fixCss}} onClick={() => this.props.downloadSVG(this.props.jobId)}>Save SVG</button>
                </p>
                <div className="mt-3" style={{width: "100%", height: "100%"}}>
                  <AutoSizer>
                    {({width, height}) => width === 0 || height === 0 ? null : (
                      <ReactSvgPanZoomLoader
                        src={`https://wwwdev.ebi.ac.uk/Tools/services/rest/auto_traveler/result/${this.props.jobId}/svg`}
                        render={content => (
                          <UncontrolledReactSVGPanZoom
                              width={width} height={parseFloat(this.props.height)}
                              toolbarProps={toolbarProps}
                              miniatureProps={miniatureProps}
                              background={"#fff"}
                          >
                            <svg width={this.props.width} height={this.props.height}>{content}</svg>
                          </UncontrolledReactSVGPanZoom>
                        )}
                      />
                    )}
                  </AutoSizer>
                </div>
                <div className="mt-3">
                  <strong>Colour legend</strong>
                  <ul className="list-unstyled">
                    <li className="mt-1"><span className="traveler-black traveler-key"></span> Same as the template</li>
                    <li className="mt-1">
                      <span className="traveler-green traveler-key"></span> Not the same as the template.
                      <strong> Tip:</strong> Hover over green nucleotides for more details
                    </li>
                    <li className="mt-1"><span className="traveler-red traveler-key"></span> Inserted nucleotides</li>
                    <li className="mt-1"><span className="traveler-blue traveler-key"></span> Re-inserted nucleotides</li>
                    <li className="mt-1"><strong>Tip:</strong> Hover over the nucleotides to see nucleotide numbers</li>
                  </ul>
                </div>
              </div>
            </div>
          ]
        }
      </div>
    )
  }
}

function mapStateToProps(state) {
  return {
    jobId: state.jobId,
    status: state.status,
    submissionError: state.submissionError,
    sequence: state.sequence,
    width: state.width,
    height: state.height,
  };
}

function mapDispatchToProps(dispatch) {
  return {
    downloadSVG: (jobId) => dispatch(actionCreators.onDownloadSVG(jobId)),
  }
}

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(Results);
